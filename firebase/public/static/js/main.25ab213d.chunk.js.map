{"version":3,"sources":["images/logo.png","images/cat.png","images/dog.png","components/containers/Header/index.jsx","components/common/Card/index.jsx","components/containers/Home/index.jsx","components/containers/Pets/index.jsx","components/containers/Pet/index.jsx","components/containers/Login/index.jsx","App.js","serviceWorker.js","firebase/index.js","index.js"],"names":["module","exports","__webpack_require__","p","AppHeader","react_default","a","createElement","Menu","fixed","inverted","Container","Link","to","Item","as","header","Image","size","src","logo","style","marginRight","Dropdown","item","simple","text","Component","CardExampleCard","Card","this","props","image","Content","Header","title","extra","link","React","AppHome","marginTop","Group","common_Card","dog","cat","PetsHome","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","petsList","_this2","window","fetch","concat","match","params","type","then","response","json","setState","_this3","Header_Header","map","pet","index","name","PetDetails","addComment","currentComment","firebase","database","ref","id","push","avatar","comment","from","sillyname","time","Date","getTime","petsDetails","comments","on","snapShot","val","marginBottom","floated","textAlign","paddingTop","margin","description","Comment","dividing","keys","key","Avatar","Author","Metadata","dist_default","fromNow","Text","Form","reply","TextArea","value","onInput","e","Button","content","labelPosition","icon","primary","onClick","AppLogin","firebaseui","auth","AuthUI","start","signInOptions","provider","EmailAuthProvider","PROVIDER_ID","requireDisplayName","GoogleAuthProvider","App","className","BrowserRouter","Fragment","Route","path","exact","component","PetsPage","PetDetailsPage","LoginPage","Boolean","location","hostname","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.25ab213d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7c0fdc49.png\";","module.exports = __webpack_public_path__ + \"static/media/cat.7dd6c46e.png\";","module.exports = __webpack_public_path__ + \"static/media/dog.41aa651d.png\";","import React, { Component } from 'react';\nimport { Menu, Container, Dropdown, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nimport logo from '../../../images/logo.png';\n\nclass AppHeader extends Component {\n    render() {\n        return (\n            <Menu fixed='top' inverted>\n                <Container>\n                    <Link to={'/'}>\n                        <Menu.Item as='a' header>\n                            <Image size='mini' src={logo} style={{ marginRight: '1.5em' }} />\n                            Pet Store\n                        </Menu.Item>\n                    </Link>\n                    <Dropdown item simple text='Pets'>\n                        <Dropdown.Menu>\n                            <Dropdown.Item>\n                                <Link to={'/pets/dogs'}>\n                                    <a>Dogs</a>\n                                </Link>\n                            </Dropdown.Item>\n                            <Dropdown.Item>\n                                <Link to={'/pets/cats'}>\n                                    <a>Cats</a>\n                                </Link>\n                            </Dropdown.Item>\n                        </Dropdown.Menu>\n                    </Dropdown>\n                </Container>\n            </Menu>\n        );\n    }\n}\n\nexport default AppHeader;","import React from 'react';\nimport { Card, Image } from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\n\nclass CardExampleCard extends React.Component {\n    render() {\n        return (\n            <Card>\n                <Image src={this.props.image} />\n                <Card.Content>\n                    <Card.Header>{this.props.title}</Card.Header>\n                </Card.Content>\n                <Card.Content extra>\n                <Link to={this.props.link}>\n                        View All\n                </Link>\n                </Card.Content>\n            </Card>\n        );\n    }\n}\n\nexport default CardExampleCard;\n","import React, { Component } from 'react';\nimport { Container, Card } from 'semantic-ui-react';\n\nimport HomeCard from '../../common/Card';\nimport cat from '../../../images/cat.png';\nimport dog from '../../../images/dog.png';\n\n\nclass AppHome extends Component {\n    render() {\n        return (\n            <Container text style={{ marginTop: '7em' }}>\n            <Card.Group>\n                <HomeCard title=\"Dogs\" link=\"/pets/dogs\" image={dog} />\n                <HomeCard title=\"Cats\" link=\"/pets/cats\" image={cat} />\n            </Card.Group>\n            </Container>\n        );\n    }\n}\n\nexport default AppHome;","import React, { Component } from 'react';\nimport { Container, Header } from 'semantic-ui-react';\nimport 'whatwg-fetch';\nimport HomeCard from '../../common/Card';\n\nclass PetsHome extends Component {  \n    constructor(props) {\n        super();\n\n        this.state = {\n            petsList: []\n        };\n    }\n\n    componentWillMount() {\n        window.fetch(`https://us-central1-react-fest.cloudfunctions.net/getPetsList?type=${this.props.match.params.type}`)\n        .then((response) => {\n            return response.json()\n        }).then((petsList) => {\n            this.setState({ petsList });\n        })\n    }\n\n    render() {\n        return (\n            <Container text style={{ marginTop: '7em' }}>\n                <Header as='h1'>{this.props.match.params.type}</Header>\n                {this.state.petsList.map( (pet, index) => {\n                    return <HomeCard link={`/pet/${this.props.match.params.type}/${index}`} title={pet.name} image={pet.image}/>\n                })}\n            </Container>\n        );\n    }\n}\n\nexport default PetsHome;","import React, { Component } from 'react';\nimport { Container, Header, Image, Comment, Form, Button } from 'semantic-ui-react';\nimport 'whatwg-fetch';\nimport Moment from 'react-moment';\nimport firebase from 'firebase';\nimport sillyname from 'sillyname';\n\nclass PetDetails extends Component {\n    constructor(props) {\n        super();\n\n        this.state = {\n            petsDetails: null,\n            comments: null,\n            currentComment: \"\"\n        };\n    }\n\n    componentWillMount() {\n        window.fetch(`https://us-central1-react-fest.cloudfunctions.net/getPetDetails?type=${this.props.match.params.type}&id=${this.props.match.params.id}`)\n            .then((response) => {\n                return response.json()\n            }).then((petsDetails) => {\n                this.setState({ petsDetails });\n            });\n        firebase.database().ref(`/pets/${this.props.match.params.type}/${this.props.match.params.id}/comments`).on('value', snapShot => {\n            this.setState({ comments: snapShot.val() })\n        });\n\n    }\n\n    addComment = () => {\n        if (this.state.currentComment) {\n            firebase.database().ref(`/pets/${this.props.match.params.type}/${this.props.match.params.id}/comments`).push({\n                \"avatar\": \"https://react.semantic-ui.com/images/avatar/small/matt.jpg\",\n                \"comment\": this.state.currentComment,\n                \"from\": sillyname(),\n                \"time\": new Date().getTime()\n            }, () => {\n                this.setState({currentComment: \"\"});\n            });\n        }\n    }\n\n    render() {\n        return this.state.petsDetails ? (\n            <Container text style={{ marginTop: '7em', marginBottom: '7em' }}>\n                <Header as='h1' floated=\"left\">{this.state.petsDetails.name}</Header>\n                <Container text textAlign=\"left\" style={{ paddingTop: '4em' }}>\n                    <Image\n                        floated='left'\n                        size='medium'\n                        src={this.state.petsDetails.image}\n                        style={{ margin: '2em 2em 2em -4em' }}\n                    />\n                    <p>{this.state.petsDetails.description}</p>\n                </Container>\n                <Container textAlign=\"left\" text style={{ marginTop: '2em' }}>\n                    <Comment.Group>\n                        <Header as='h3' dividing>\n                            Comments\n                        </Header>\n                        {this.state.comments && Object.keys(this.state.comments).map(id => {\n                            const comment = this.state.comments[id];\n                            return (\n                                <Comment key={id}>\n                                    <Comment.Avatar src={comment.avatar} />\n                                    <Comment.Content>\n                                        <Comment.Author as='a'>{comment.from}</Comment.Author>\n                                        <Comment.Metadata>\n                                            <div><Moment fromNow>{comment.time}</Moment></div>\n                                        </Comment.Metadata>\n                                        <Comment.Text>{comment.comment}</Comment.Text>\n                                    </Comment.Content>\n                                </Comment>);\n                        })\n                        }\n                        <Form reply>\n                            <Form.TextArea value={this.state.currentComment} onInput={(e, val) => { \n                                    this.setState({ currentComment: val.value }) \n                                }} />\n                            <Button content='Add Reply' labelPosition='left' icon='edit' primary onClick={this.addComment} />\n                        </Form>\n                    </Comment.Group>\n                </Container>\n            </Container>\n        ) : null;\n    }\n}\n\nexport default PetDetails;","import React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport firebaseui from 'firebaseui';\nimport firebase from 'firebase';\n\nclass AppLogin extends Component {\n\n    componentDidMount() {\n        var ui = new firebaseui.auth.AuthUI(firebase.auth());\n        ui.start('#firebaseui-auth-container', {\n            signInOptions: [\n              {\n                provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\n                requireDisplayName: false\n              },\n              firebase.auth.GoogleAuthProvider.PROVIDER_ID\n            ]\n          });\n    }\n\n    render() {\n        return (\n            <Container text style={{ marginTop: '7em' }}>\n                <div id=\"firebaseui-auth-container\"></div>\n            </Container>\n        );\n    }\n}\n\nexport default AppLogin;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport 'semantic-ui-css/semantic.min.css';\n\nimport './App.scss';\nimport MainHeader from './components/containers/Header';\nimport AppHome from './components/containers/Home';\nimport PetsPage from './components/containers/Pets';\nimport PetDetailsPage from './components/containers/Pet';\nimport LoginPage from './components/containers/Login';\n\nclass App extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Router>\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<MainHeader />\n\t\t\t\t\t\t<Route path=\"/\" exact component={AppHome} />\n\t\t\t\t\t\t<Route path=\"/pets/:type\" exact component={PetsPage} />\n\t\t\t\t\t\t<Route path=\"/pet/:type/:id\" exact component={PetDetailsPage} />\n\t\t\t\t\t\t<Route path=\"/login\" exact component={LoginPage} />\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t</Router>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import firebase from \"firebase\";\n\n/**\n * @description Configures store with all the reducers\n * @returns {object} creates and returns store\n */\nexport default function configureFirebase() {\n    const config = {\n        apiKey: \"AIzaSyCuNofa9LGMb_Wt22BNn6czboC0j0UZTr0\",\n        authDomain: \"react-fest.firebaseapp.com\",\n        databaseURL: \"https://react-fest.firebaseio.com\",\n        projectId: \"react-fest\",\n        storageBucket: \"react-fest.appspot.com\",\n        messagingSenderId: \"163419432957\"\n      };\n      firebase.initializeApp(config);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureFirebase from './firebase';\n// import firebase from 'firebase';\n// import sillyname from 'sillyname';\n\nconfigureFirebase();\n// firebase.auth().signInAnonymously();\n// let photoURL = \"\";\n// const displayName = sillyname();\n// avatar(displayName).toBuffer( (err,buffer) => {\n//     photoURL = buffer.toString('base64');\n// });\n// firebase.auth().currentUser.updateProfile({ displayName })\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}